plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

import org.apache.tools.ant.filters.*
version '1.0.0'

project.ext{
	title = "Daccor"
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'eclipse-wtp'
    
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'
    testCompile 'junit:junit:4.12'
    compile group: 'commons-cli', name: 'commons-cli', version: '1+'
    compile 'com.uni-tuebingen.de.it.eager:EAGER-lib:+'
    compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.9'
}

test {
	testLogging {
		showStandardStreams = true
	}
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

jar {
    manifest {
        attributes("Implementation-Title": project.title,
                "Implementation-Version": version, "main-Class": "userinterface.Main")
    }
    doFirst {
        from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}

clean.doFirst {
	delete "${rootDir}/Releases/"
}

task copyJarToBin(type: Copy) {
	mkdir 'Releases'
	def jarName = "build/libs/" + title + "-" + version + ".jar"
    from jarName
    into "Releases"
}

build.finalizedBy(copyJarToBin)

processResources {
	filesMatching('version.properties'){
    	expand projectVersion: project.version
    }
	filesMatching('title.properties'){
    	expand projectTitle: project.title
    }
} 

eclipse.classpath.file {
    withXml { xml ->
        def node = xml.asNode()
        node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
        node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
    }
}